@page "/veiculo/{slug}/{id:int:min(1)}"
@using Wheels_in_Csharp.Models
@using Wheels_in_Csharp.Models;
@using Wheels_in_Csharp.Pages;

@model Wheels_in_Csharp.Pages.DetailsModel
@{
    ViewData["Title"] = "Detalhes do Veículo";
}

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h1 class="display-4 mb-4">@Model.Vehicle.Model</h1>
            <div class="mb-4">
                <img class="img-fluid rounded-lg shadow" src="@Model.Vehicle.ImagemUri" alt="@Model.Vehicle.Model">
                <div class="d-flex mt-2">
                    <img src="@Model.Vehicle.ImagemUri" class="img-thumbnail mr-2" width="80">
                </div>
            </div>
            <div class="card mb-4">
                <div class="card-body">
                    <h3 class="card-title">Descrição</h3>
                    <p class="card-text">@Model.Vehicle.Description</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm sticky-top" style="top: 20px;">
                <div class="card-body">
                    <h3 class="card-title">Informações do Veículo</h3>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="mb-0 text-primary" style="color: #699e73 !important">@Html.DisplayFor(model => model.Vehicle.HourlyRate)/hora</h4>
                        <span class="badge @Model.GetStatusBadgeClass(Model.Vehicle.Status)">
                            @Model.GetStatusDisplayName(Model.Vehicle.Status)
                        </span>
                    </div>
                    @if (Model.Vehicle.Status == VehicleStatus.AVAILABLE)
                    {
                        <a asp-page="/Rent" asp-route-vehicleId="@Model.Vehicle.Id" class="btn btn-primary btn-lg w-100 mb-3">
                            Alugar este veículo
                        </a>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            Este veículo está @Model.GetStatusDisplayName(Model.Vehicle.Status).ToLower() no momento.
                        </div>
                        <button class="btn btn-outline-secondary w-100" disabled>
                            @Model.GetStatusDisplayName(Model.Vehicle.Status)
                        </button>
                    }
                    <hr>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Placa:</span>
                        <strong>@Model.Vehicle.LicensePlate</strong>
                    </div>
                    @if (Model.Vehicle is Bicycle bicycle)
                    {
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tipo de Bicicleta:</span>
                            <strong>@bicycle.BikeType</strong>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Inclui Capacete:</span>
                            <strong>@(bicycle.HasHelmet ? "Sim" : "Não")</strong>
                        </div>
                    }
                    else if (Model.Vehicle is Car car)
                    {
                        <div class="d-flex justify-content-between mb-2">
                            <span>Combustível:</span>
                            <strong>@car.FuelType</strong>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Ar Condicionado:</span>
                            <strong>@(car.HasAC ? "Sim" : "Não")</strong>
                        </div>
                    }
                    else if (Model.Vehicle is Motorcycle motorcycle)
                    {
                        <div class="d-flex justify-content-between mb-2">
                            <span>Cilindrada:</span>
                            <strong>@motorcycle.EngineCapacity cc</strong>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Inclui Capacete:</span>
                            <strong>@(motorcycle.HasHelmet ? "Sim" : "Não")</strong>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(VehicleStatus status)
    {
        return status switch
        {
            VehicleStatus.AVAILABLE => "bg-success",
            VehicleStatus.RENTED => "bg-danger",
            VehicleStatus.MAINTENANCE => "bg-warning",
            VehicleStatus.DAMAGED => "bg-dark",
            VehicleStatus.RETIRED => "bg-secondary",
            _ => "bg-info"
        };
    }

    string GetStatusDisplayName(VehicleStatus status)
    {
        return status switch
        {
            VehicleStatus.AVAILABLE => "Disponível",
            VehicleStatus.RENTED => "Alugado",
            VehicleStatus.MAINTENANCE => "Em Manutenção",
            VehicleStatus.DAMAGED => "Danificado",
            VehicleStatus.RETIRED => "Retirado",
            _ => status.ToString()
        };
    }
}

<style>
    .sticky-top {
        position: -webkit-sticky;
        position: sticky;
    }

    .card {
        border-radius: 10px;
        overflow: hidden;
    }

    .img-thumbnail {
        cursor: pointer;
        transition: transform 0.2s;
    }

        .img-thumbnail:hover {
            transform: scale(1.05);
        }
</style>
