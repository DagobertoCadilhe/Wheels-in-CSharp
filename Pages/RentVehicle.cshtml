@page "/rent-vehicle/{id:int}"
@using Wheels_in_Csharp.Models
@model RentVehicleModel
@{
    ViewData["Title"] = $"Alugar {Model.Vehicle?.Model}";
}

<div class="container mt-4">
    <div class="row">
        <!-- Informações do Veículo -->
        <div class="col-lg-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-car me-2"></i>
                        Informações do Veículo
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.Vehicle != null)
                    {
                        <div class="text-center mb-3">
                            <img src="@Model.Vehicle.ImagemUri" 
                                 alt="@Model.Vehicle.Model" 
                                 class="img-fluid rounded" 
                                 style="max-height: 300px;">
                        </div>
                        
                        <h5 class="card-title">@Model.Vehicle.Model</h5>
                        <p class="text-muted">@Model.Vehicle.Description</p>
                        
                        <div class="row">
                            <div class="col-6">
                                <strong>Ano:</strong> @Model.Vehicle.Year
                            </div>
                            <div class="col-6">
                                <strong>Cor:</strong> @Model.Vehicle.Color
                            </div>
                            <div class="col-6">
                                <strong>Localização:</strong> @Model.Vehicle.CurrentLocation
                            </div>
                            <div class="col-6">
                                <strong>Valor/Hora:</strong> 
                                <span class="text-success fw-bold">
                                    @Model.Vehicle.HourlyRate.ToString("C")
                                </span>
                            </div>
                        </div>

                        <!-- Informações específicas do tipo de veículo -->
                        @if (Model.Vehicle is Car car)
                        {
                            <hr>
                            <h6>Detalhes do Carro</h6>
                            <div class="row">
                                <div class="col-6">
                                    <small><strong>Combustível:</strong> @car.FuelType</small>
                                </div>
                                <div class="col-6">
                                    <small><strong>Lugares:</strong> @car.Seats</small>
                                </div>
                                <div class="col-6">
                                    <small><strong>Transmissão:</strong> @car.Transmission</small>
                                </div>
                                <div class="col-6">
                                    <small><strong>Ar Condicionado:</strong> 
                                        @(car.HasAC ? "Sim" : "Não")
                                    </small>
                                </div>
                            </div>
                        }
                        else if (Model.Vehicle is Motorcycle motorcycle)
                        {
                            <hr>
                            <h6>Detalhes da Moto</h6>
                            <div class="row">
                                <div class="col-6">
                                    <small><strong>Cilindrada:</strong> @motorcycle.EngineCapacity cc</small>
                                </div>
                                <div class="col-6">
                                    <small><strong>Capacete:</strong> 
                                        @(motorcycle.HasHelmet ? "Incluído" : "Não incluído")
                                    </small>
                                </div>
                            </div>
                        }
                        else if (Model.Vehicle is Bicycle bicycle)
                        {
                            <hr>
                            <h6>Detalhes da Bicicleta</h6>
                            <div class="row">
                                <div class="col-6">
                                    <small><strong>Tipo:</strong> @bicycle.BikeType</small>
                                </div>
                                <div class="col-6">
                                    <small><strong>Capacete:</strong> 
                                        @(bicycle.HasHelmet ? "Incluído" : "Não incluído")
                                    </small>
                                </div>
                                <div class="col-12">
                                    <small><strong>Trava:</strong> 
                                        @(bicycle.HasLock ? "Incluída" : "Não incluída")
                                    </small>
                                </div>
                            </div>
                        }
                        
                        <div class="mt-3">
                            <span class="badge @Model.GetStatusBadgeClass(Model.Vehicle.Status)">
                                @Model.GetStatusDisplayName(Model.Vehicle.Status)
                            </span>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            Veículo não encontrado.
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Formulário de Aluguel -->
        <div class="col-lg-6">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-calendar-alt me-2"></i>
                        Agendar Aluguel
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.Vehicle?.Status == VehicleStatus.AVAILABLE)
                    {
                        <form id="rentalForm">
                            <input type="hidden" id="vehicleId" value="@Model.Vehicle.Id">
                            
                            <div class="mb-3">
                                <label for="startDate" class="form-label">
                                    <i class="fas fa-play me-1"></i>
                                    Data e Hora de Início
                                </label>
                                <input type="datetime-local" 
                                       class="form-control" 
                                       id="startDate" 
                                       name="startDate" 
                                       required
                                       min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")">
                            </div>

                            <div class="mb-3">
                                <label for="endDate" class="form-label">
                                    <i class="fas fa-stop me-1"></i>
                                    Data e Hora de Término
                                </label>
                                <input type="datetime-local" 
                                       class="form-control" 
                                       id="endDate" 
                                       name="endDate" 
                                       required
                                       min="@DateTime.Now.AddHours(1).ToString("yyyy-MM-ddTHH:mm")">
                            </div>

                            <div class="mb-3">
                                <button type="button" 
                                        class="btn btn-outline-info btn-sm" 
                                        onclick="calculateCost()">
                                    <i class="fas fa-calculator me-1"></i>
                                    Calcular Custo
                                </button>
                            </div>

                            <div id="costDisplay" class="mb-3" style="display: none;">
                                <div class="alert alert-info">
                                    <h6>Resumo do Aluguel:</h6>
                                    <div id="rentalSummary"></div>
                                    <hr>
                                    <h5 class="text-success">
                                        Total: <span id="totalCost">R$ 0,00</span>
                                    </h5>
                                </div>
                            </div>

                            <div class="d-grid gap-2">
                                <button type="submit" 
                                        class="btn btn-success btn-lg" 
                                        id="rentButton"
                                        disabled>
                                    <i class="fas fa-key me-2"></i>
                                    Confirmar Aluguel
                                </button>
                                
                                <a href="/Details/@Model.Vehicle.Id" 
                                   class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left me-2"></i>
                                    Voltar aos Detalhes
                                </a>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            Este veículo não está disponível para aluguel no momento.
                        </div>
                        <a href="/Details/@Model.Vehicle?.Id" class="btn btn-primary">
                            <i class="fas fa-arrow-left me-2"></i>
                            Voltar aos Detalhes
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Sucesso -->
<div class="modal fade" id="successModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">
                    <i class="fas fa-check-circle me-2"></i>
                    Aluguel Confirmado!
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="successMessage"></div>
            </div>
            <div class="modal-footer">
                <a href="/my-rentals" class="btn btn-primary">Ver Meus Aluguéis</a>
                <a href="/" class="btn btn-outline-secondary">Voltar ao Início</a>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Erro -->
<div class="modal fade" id="errorModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Erro
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="errorMessage"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentCost = 0;
        
        // Calcular custo em tempo real
        function calculateCost() {
            const vehicleId = document.getElementById('vehicleId').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            
            if (!startDate || !endDate) {
                alert('Por favor, preencha as datas de início e fim.');
                return;
            }
            
            if (new Date(startDate) >= new Date(endDate)) {
                alert('A data de início deve ser anterior à data de fim.');
                return;
            }
            
            const requestData = {
                vehicleId: parseInt(vehicleId),
                startDate: startDate,
                endDate: endDate
            };
            
            fetch('/api/rental/calculate-cost', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(requestData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.totalCost !== undefined) {
                    currentCost = data.totalCost;
                    displayCostCalculation(startDate, endDate, data.totalCost);
                    document.getElementById('rentButton').disabled = false;
                } else {
                    throw new Error(data.message || 'Erro ao calcular custo');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                alert('Erro ao calcular custo: ' + error.message);
            });
        }
        
        function displayCostCalculation(startDate, endDate, totalCost) {
            const start = new Date(startDate);
            const end = new Date(endDate);
            const hours = Math.ceil((end - start) / (1000 * 60 * 60));
            
            const summaryHtml = `
                <div class="row">
                    <div class="col-sm-6"><strong>Início:</strong></div>
                    <div class="col-sm-6">${start.toLocaleString('pt-BR')}</div>
                    <div class="col-sm-6"><strong>Fim:</strong></div>
                    <div class="col-sm-6">${end.toLocaleString('pt-BR')}</div>
                    <div class="col-sm-6"><strong>Duração:</strong></div>
                    <div class="col-sm-6">${hours} hora(s)</div>
                </div>
            `;
            
            document.getElementById('rentalSummary').innerHTML = summaryHtml;
            document.getElementById('totalCost').textContent = 
                new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(totalCost);
            document.getElementById('costDisplay').style.display = 'block';
        }
        
        // Submeter formulário de aluguel
        document.getElementById('rentalForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (currentCost === 0) {
                alert('Por favor, calcule o custo antes de confirmar o aluguel.');
                return;
            }
            
            const vehicleId = document.getElementById('vehicleId').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            
            const requestData = {
                vehicleId: parseInt(vehicleId),
                startDate: startDate,
                endDate: endDate
            };
            
            // Desabilitar botão para evitar duplo clique
            const rentButton = document.getElementById('rentButton');
            rentButton.disabled = true;
            rentButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Processando...';
            
            fetch('/api/rental/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(requestData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.id) {
                    // Sucesso
                    const successMessage = `
                        <h6>Aluguel #${data.id} criado com sucesso!</h6>
                        <p><strong>Veículo:</strong> ${data.vehicleModel}</p>
                        <p><strong>Período:</strong> ${new Date(data.startDate).toLocaleString('pt-BR')} até ${new Date(data.endDate).toLocaleString('pt-BR')}</p>
                        <p><strong>Total:</strong> ${new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(data.totalCost)}</p>
                    `;
                    document.getElementById('successMessage').innerHTML = successMessage;
                    
                    const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                    successModal.show();
                } else {
                    throw new Error(data.message || 'Erro desconhecido');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                document.getElementById('errorMessage').textContent = error.message;
                
                const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
                errorModal.show();
                
                // Reabilitar botão
                rentButton.disabled = false;
                rentButton.innerHTML = '<i class="fas fa-key me-2"></i>Confirmar Aluguel';
            });
        });
        
        // Validação em tempo real das datas
        document.getElementById('startDate').addEventListener('change', function() {
            const startDate = this.value;
            const endDateInput = document.getElementById('endDate');
            
            if (startDate) {
                const minEndDate = new Date(startDate);
                minEndDate.setHours(minEndDate.getHours() + 1);
                endDateInput.min = minEndDate.toISOString().slice(0, 16);
                
                // Reset do custo se as datas mudaram
                document.getElementById('costDisplay').style.display = 'none';
                document.getElementById('rentButton').disabled = true;
                currentCost = 0;
            }
        });
        
        document.getElementById('endDate').addEventListener('change', function() {
            // Reset do custo se as datas mudaram
            document.getElementById('costDisplay').style.display = 'none';
            document.getElementById('rentButton').disabled = true;
            currentCost = 0;
        });
    </script>
}